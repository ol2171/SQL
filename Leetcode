185. Department Top Three Salaries
https://leetcode.com/problems/department-top-three-salaries/description/

select department, employee, salary
from 
(select b.Name as Department,a.name as employee,a.salary,DENSE_RANK() over (partition by b.Name order by a.Salary desc) as rank1
 from Employee a
 left join Department b
 on a.DepartmentID=b.ID) a
where rank1<=3

176. Second Highest Salary

Accepted:
select max(Salary) as SecondHighestSalary
from Employee
where Salary <> (select max(salary) from employee)

Others?
select distinct Salary as SecondHighestSalary 
from Employee 
order by Salary Desc limit 1 offset 1 

# offset n gives n-th highest salary

select a.Salary as SecondHighestSalary
from 
(select salary, rank() over (order by Salary) as rank1
 from Employee) a
where a.rank1 = 2

177. Nth Highest
https://javarevisited.blogspot.com/2016/01/4-ways-to-find-nth-highest-salary-in.html

180.Consecutive 3 Numbers

Accepted:

select distinct num as ConsecutiveNums
from
(select num,lead(num,1) over (order by id) as lead1,lead(num,2) over (order by id) as lead2
from Logs) as a
where a.num=a.lead1 and a.lead1=a.lead2

select l1.Num as ConsecutiveNums
from Logs l1, Logs l2, Logs l3
where l1.ID=l2.ID-1
and l2.ID=l3.ID-1
and l1.Num=l2.Num=l3.Num

603. 2 Consecutive Available Seats

select distinct c1.seat_id
from cinema c1
join cinema c2
where abs(c1.seat_id - c2.seat_id)=1
and c1.free=1 and c2.free=1
order by c1.seat_id

196.Delete duplicates

DELETE p1 FROM Person p1,
    Person p2
WHERE
    p1.Email = p2.Email AND p1.Id > p2.Id
    
 
 178.rank scores
 
 https://leetcode.com/problems/rank-scores/discuss/53094/Simple-Short-Fast
 
 Difference between ranks:https://docs.microsoft.com/en-us/sql/t-sql/functions/ranking-functions-transact-sql?view=sql-server-2017
 
 select score,dense_rank() over (order by score desc) as rank
 
 597. Friend Requests I: Overall Acceptance Rate
 
 select round(
        ifnull(
                (select count(distinct requester_id,accepter_id) from request_accepted as accept)/
                (Select count(distinct sender_id,send_to_id) from friend_request as request),0)
        ,2) as accept_rate
                       
select round(ifnull(count(distinct requester_id,accepter_id)/count(distinct sender_id,send_to_id),0),2) as accept_rate
from request_accepted,friend_request
from Scores

 select s2.score
     Score, (select count(distinct score) from Scores s1 where s1.Score>=s2.Score) Rank
from scores s2
order by Score desc

Follow-ups?

